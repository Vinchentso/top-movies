{"version":3,"sources":["images/no_image.jpg","images/react-movie-logo.svg","images/tmdb_logo.svg","images/search-icon.svg","components/Header/Header.styles.js","components/Header/index.js","GlobalStyle.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/Spinner.styles.js","components/Spinner/index.js","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","API.js","components/Button/index.js","helpers.js","hooks/useHomeFetch.js","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","div","_templateObject","Content","_templateObject2","LogoImg","img","_templateObject3","TMDBLogoImg","_templateObject4","Header","react_default","a","createElement","react_router_dom","to","src","RMDBLogo","alt","TMDBLogo","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","API_URL","API_KEY","process","SEARCH_BASE_URL","concat","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","HeroImage_styles_templateObject","_ref","image","HeroImage_styles_templateObject2","Text","HeroImage_styles_templateObject3","HeroImage","title","text","HeroImage_styles_Wrapper","HeroImage_styles_Content","Grid_styles_templateObject","Grid_styles_templateObject2","Grid","header","children","Grid_styles_Wrapper","Grid_styles_Content","Image","Thumb_styles_templateObject","Thumb","movieId","clickable","Spinner","Spinner_styles_templateObject","SearchBar_styles_templateObject","SearchBar_styles_templateObject2","SearchBar","setSearchTerm","_useState","useState","_useState2","Object","slicedToArray","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","SearchBar_styles_Wrapper","SearchBar_styles_Content","searchIcon","type","placeholder","onChange","event","currentTarget","value","_rateMovie","_authenticate","_getRequestToken","_fetchCredits","_fetchMovie","_fetchMovies","button","Button_styles_templateObject","Button","callback","Button_styles_Wrapper","onClick","defaultConfig","method","headers","Content-Type","apiSettings","fetchMovies","asyncToGenerator","regenerator_default","mark","_callee","searchTerm","page","endpoint","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","this","_x","_x2","apply","arguments","fetchMovie","_callee2","_context2","_x3","fetchCredits","_callee3","creditsEndpoint","_context3","_x4","getRequestToken","_callee4","reqToken","_context4","request_token","authenticate","_callee5","requestToken","username","password","bodyData","sessionId","_context5","objectSpread","body","JSON","stringify","success","_x5","_x6","_x7","rateMovie","_callee6","rating","_context6","_x8","_x9","_x10","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","_useHomeFetch","_useState3","_useState4","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","_useState9","_useState10","isLoadingMore","setIsLoadingMore","movies","_args","length","undefined","API","toConsumableArray","t0","console","log","setItem","useHomeFetch","Fragment","components_HeroImage","backdrop_path","original_title","overview","components_SearchBar","components_Grid","map","movie","components_Thumb","key","id","poster_path","NoImage","components_Spinner","components_Button","BreadCrumb_styles_templateObject","BreadCrumb_styles_templateObject2","BreadCrumb","movieTitle","BreadCrumb_styles_Wrapper","BreadCrumb_styles_Content","MovieInfo_styles_templateObject","backdrop","MovieInfo_styles_templateObject2","MovieInfo_styles_templateObject3","MovieInfo","MovieInfo_styles_Wrapper","MovieInfo_styles_Content","MovieInfo_styles_Text","className","vote_average","directors","director","credit_id","name","MovieInfoBar_styles_templateObject","MovieInfoBar_styles_templateObject2","MovieInfoBar","time","budget","revenue","MovieInfoBar_styles_Wrapper","MovieInfoBar_styles_Content","hours","Math","floor","mins","calcTime","Actor_styles_templateObject","Actor_styles_templateObject2","Actor","character","imageUrl","Actor_styles_Wrapper","Actor_styles_Image","Movie","_useMovieFetch","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","components_BreadCrumb","components_MovieInfo","components_MovieInfoBar","runtime","actor","components_Actor","profile_path","NotFound","App","components_Header","react_router","path","element","components_Home","components_Movie","components_NotFound","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+1BCEjC,IAAMC,EAAUC,IAAOC,IAAVC,KAKPC,EAAUH,IAAOC,IAAVG,KASPC,EAAUL,IAAOM,IAAVC,KAOPC,EAAcR,IAAOM,IAAVG,KCHTC,EAZA,kBACXC,EAAAC,EAAAC,cAACd,EAAD,KACIY,EAAAC,EAAAC,cAACV,EAAD,KACIQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KACLJ,EAAAC,EAAAC,cAACR,EAAD,CAASW,IAAKC,IAAUC,IAAI,eAGhCP,EAAAC,EAAAC,cAACL,EAAD,CAAaQ,IAAKG,IAAUD,IAAI,6sBCbrC,IAAME,EAAcC,YAAHC,KCClBC,EAAU,gCACVC,EAAUC,mCAEVC,EAAe,GAAAC,OAAMJ,EAAN,yBAAAI,OAAqCH,EAArC,0BACfI,EAAgB,GAAAD,OAAMJ,EAAN,0BAAAI,OAAsCH,EAAtC,mBAEhBK,EAAiB,GAAAF,OAAMJ,EAAN,qCAAAI,OAAiDH,GAClEM,EAAS,GAAAH,OAAMJ,EAAN,qDAAAI,OAAiEH,GAC1EO,EAAc,GAAAJ,OAAMJ,EAAN,uCAAAI,OAAmDH,GAEjEQ,EAAiB,g0CCXhB,IAAMjC,EAAUC,IAAOC,IAAVgC,IAKV,SAAAC,GAAA,OAAAA,EAAEC,QAoBChC,EAAUH,IAAOC,IAAVmC,KAOPC,EAAOrC,IAAOC,IAAVqC,KCVFC,EAnBG,SAAAL,GAAA,IAAEC,EAAFD,EAAEC,MAAOK,EAATN,EAASM,MAAOC,EAAhBP,EAAgBO,KAAhB,OACd9B,EAAAC,EAAAC,cAAC6B,EAAD,CAASP,MAAOA,GACZxB,EAAAC,EAAAC,cAAC8B,EAAD,KACIhC,EAAAC,EAAAC,cAACwB,EAAD,KACI1B,EAAAC,EAAAC,cAAA,UAAK2B,GACL7B,EAAAC,EAAAC,cAAA,SAAI4B,mfCRb,IAAM1C,EAAUC,IAAOC,IAAV2C,KAePzC,EAAUH,IAAOC,IAAV4C,KCELC,EAbH,SAAAZ,GAAA,IAAEa,EAAFb,EAAEa,OAAQC,EAAVd,EAAUc,SAAV,OACRrC,EAAAC,EAAAC,cAACoC,EAAD,KACItC,EAAAC,EAAAC,cAAA,UAAKkC,GACLpC,EAAAC,EAAAC,cAACqC,EAAD,KAAUF,obCPX,IAAMG,EAAQnD,IAAOM,IAAV8C,KC2BHC,EAtBD,SAAAnB,GAAA,IAAEC,EAAFD,EAAEC,MAAOmB,EAATpB,EAASoB,QAASC,EAAlBrB,EAAkBqB,UAAlB,OAEV5C,EAAAC,EAAAC,cAAA,WACK0C,EACG5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAE,IAAAY,OAAM2B,IACV3C,EAAAC,EAAAC,cAACsC,EAAD,CAAOnC,IAAKmB,EAAOjB,IAAI,iBAG3BP,EAAAC,EAAAC,cAACsC,EAAD,CAAOnC,IAAKmB,EAAOjB,IAAI,udCb5B,ICAQsC,EDAQxD,IAAOC,IAAVwD,81BEAb,IAAM1D,GAAUC,IAAOC,IAAVyD,MASPvD,GAAUH,IAAOC,IAAV0D,MC2CLC,GA7CG,SAAA1B,GAAoB,IAAlB2B,EAAkB3B,EAAlB2B,cAAkBC,EACRC,mBAAS,IADDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3BK,EAD2BH,EAAA,GACpBI,EADoBJ,EAAA,GAE5BK,EAAUC,kBAAO,GAqBvB,OAjBAC,oBAAU,WAEN,IAAGF,EAAQG,QAAX,CAMA,IAAMC,EAAQC,WAAW,WACrBb,EAAcM,IACf,KAEH,OAAO,kBAAMQ,aAAaF,IATtBJ,EAAQG,SAAU,GAUxB,CAACX,EAAeM,IAKlBxD,EAAAC,EAAAC,cAAC+D,GAAD,KACIjE,EAAAC,EAAAC,cAACgE,GAAD,KACIlE,EAAAC,EAAAC,cAAA,OAAKG,IAAK8D,IAAY5D,IAAI,gBAC1BP,EAAAC,EAAAC,cAAA,SACIkE,KAAK,OACLC,YAAY,eACZC,SAAU,SAAAC,GAAK,OAAId,EAASc,EAAMC,cAAcC,QAChDA,MAAOjB,kbCtChB,IC2DIkB,GAxBGC,GAJGC,GALHC,GAJFC,GANCC,GDhBA3F,GAAUC,IAAO2F,OAAVC,MEcLC,GAXA,SAAA3D,GAAA,IAAEO,EAAFP,EAAEO,KAAMqD,EAAR5D,EAAQ4D,SAAR,OACXnF,EAAAC,EAAAC,cAACkF,GAAD,CAAShB,KAAK,SAASiB,QAASF,GAC3BrD,gDDGHwD,GAAgB,CACpBC,OAAQ,OACRC,QAAS,CACPC,eAAgB,qBA8DLC,GA1DK,CAClBC,aAAWZ,GAAAzB,OAAAsC,GAAA,EAAAtC,CAAAuC,GAAA5F,EAAA6F,KAAE,SAAAC,EAAOC,EAAYC,GAAnB,IAAAC,EAAA,OAAAL,GAAA5F,EAAAkG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLJ,EAAWF,EAAU,GAAAhF,OACpBD,GADoBC,OACFgF,EADE,UAAAhF,OACiBiF,GADjB,GAAAjF,OAEpBC,EAFoB,UAAAD,OAEKiF,GAHrBG,EAAAE,KAAA,EAISC,MAAML,GAJf,cAAAE,EAAAE,KAAA,EAAAF,EAAAI,KAI0BC,OAJ1B,cAAAL,EAAAM,OAAA,SAAAN,EAAAI,MAAA,wBAAAJ,EAAAO,SAAAZ,EAAAa,SAAF,SAAAC,EAAAC,GAAA,OAAA/B,GAAAgC,MAAAH,KAAAI,aAMXC,YAAUnC,GAAAxB,OAAAsC,GAAA,EAAAtC,CAAAuC,GAAA5F,EAAA6F,KAAE,SAAAoB,EAAMvE,GAAN,IAAAuD,EAAA,OAAAL,GAAA5F,EAAAkG,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cACJJ,EADI,GAAAlF,OACUJ,EADV,UAAAI,OAC0B2B,EAD1B,aAAA3B,OAC6CH,GAD7CsG,EAAAb,KAAA,EAEUC,MAAML,GAFhB,cAAAiB,EAAAb,KAAA,EAAAa,EAAAX,KAE2BC,OAF3B,cAAAU,EAAAT,OAAA,SAAAS,EAAAX,MAAA,wBAAAW,EAAAR,SAAAO,EAAAN,SAAF,SAAAQ,GAAA,OAAAtC,GAAAiC,MAAAH,KAAAI,aAIVK,cAAYxC,GAAAvB,OAAAsC,GAAA,EAAAtC,CAAAuC,GAAA5F,EAAA6F,KAAE,SAAAwB,EAAM3E,GAAN,IAAA4E,EAAA,OAAA1B,GAAA5F,EAAAkG,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cACNiB,EADM,GAAAvG,OACeJ,EADf,UAAAI,OAC+B2B,EAD/B,qBAAA3B,OAC0DH,GAD1D2G,EAAAlB,KAAA,EAEQC,MAAMgB,GAFd,cAAAC,EAAAlB,KAAA,EAAAkB,EAAAhB,KAEgCC,OAFhC,cAAAe,EAAAd,OAAA,SAAAc,EAAAhB,MAAA,wBAAAgB,EAAAb,SAAAW,EAAAV,SAAF,SAAAa,GAAA,OAAA5C,GAAAkC,MAAAH,KAAAI,aAKZU,iBAAe9C,GAAAtB,OAAAsC,GAAA,EAAAtC,CAAAuC,GAAA5F,EAAA6F,KAAE,SAAA6B,IAAA,IAAAC,EAAA,OAAA/B,GAAA5F,EAAAkG,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACeC,MAAMrF,GADrB,cAAA2G,EAAAvB,KAAA,EAAAuB,EAAArB,KACyCC,OADzC,cACTmB,EADSC,EAAArB,KAAAqB,EAAAnB,OAAA,SAERkB,EAASE,eAFD,wBAAAD,EAAAlB,SAAAgB,EAAAf,SAAF,kBAAAhC,GAAAmC,MAAAH,KAAAI,aAIfe,cAAYpD,GAAArB,OAAAsC,GAAA,EAAAtC,CAAAuC,GAAA5F,EAAA6F,KAAE,SAAAkC,EAAOC,EAAcC,EAAUC,GAA/B,IAAAC,EAAAC,EAAA,OAAAxC,GAAA5F,EAAAkG,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cACN8B,EAAW,CACfF,WACAC,WACAL,cAAeG,GAJLK,EAAAhC,KAAA,EAQJC,MAAMpF,EAADmC,OAAAiF,GAAA,EAAAjF,CAAA,GACNgC,GADM,CAETkD,KAAMC,KAAKC,UAAUN,MAVb,cAAAE,EAAAhC,KAAA,EAAAgC,EAAA9B,KAYVC,OAZU,WAAA6B,EAAA9B,KAcHmC,QAdG,CAAAL,EAAAhC,KAAA,gBAAAgC,EAAAhC,KAAA,EAgBFC,MAAMnF,EAADkC,OAAAiF,GAAA,EAAAjF,CAAA,GACNgC,GADM,CAETkD,KAAMC,KAAKC,UAAU,CAAEZ,cAAeG,OAlBhC,cAAAK,EAAAhC,KAAA,GAAAgC,EAAA9B,KAoBRC,OApBQ,eAeJ4B,EAfIC,EAAA9B,KAAA8B,EAAA5B,OAAA,SAqBH2B,GArBG,yBAAAC,EAAA3B,SAAAqB,EAAApB,SAAF,SAAAgC,EAAAC,EAAAC,GAAA,OAAAnE,GAAAoC,MAAAH,KAAAI,aAwBZ+B,WAASrE,GAAApB,OAAAsC,GAAA,EAAAtC,CAAAuC,GAAA5F,EAAA6F,KAAE,SAAAkD,EAAOX,EAAW1F,EAAS8B,GAA3B,IAAAyB,EAAA+C,EAAA,OAAApD,GAAA5F,EAAAkG,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cACHJ,EADG,GAAAlF,OACWJ,EADX,UAAAI,OAC2B2B,EAD3B,oBAAA3B,OACqDH,EADrD,gBAAAG,OAC2EqH,GAD3Ea,EAAA5C,KAAA,EAIDC,MAAML,EAAD5C,OAAAiF,GAAA,EAAAjF,CAAA,GACNgC,GADM,CAETkD,KAAMC,KAAKC,UAAU,CAAEjE,aANlB,cAAAyE,EAAA5C,KAAA,EAAA4C,EAAA1C,KAQPC,OARO,cAGHwC,EAHGC,EAAA1C,KAAA0C,EAAAxC,OAAA,SAUFuC,GAVE,wBAAAC,EAAAvC,SAAAqC,EAAApC,SAAF,SAAAuC,EAAAC,EAAAC,GAAA,OAAA3E,GAAAqC,MAAAH,KAAAI,cEtDEsC,GAAe,SAAAC,GAM1B,OALkB,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAERC,OAAON,IAGbO,GAAmB,SAAAC,GAC5B,IAAMC,EAAeC,eAAeC,QAAQH,GAC5C,OAAOC,GAAgBvB,KAAK0B,MAAMH,ICZhCI,GAAe,CACnBnE,KAAM,EACNoE,QAAS,GACTC,YAAa,EACbC,cAAe,uBC+CFC,GAzCF,WAAM,IAAAC,EDHS,WAAM,IASflJ,EATe4B,EACIC,mBAAS,IADbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACzB6C,EADyB3C,EAAA,GACbH,EADaG,EAAA,GAAAqH,EAENtH,mBAASgH,IAFHO,EAAArH,OAAAC,EAAA,EAAAD,CAAAoH,EAAA,GAEzBlH,EAFyBmH,EAAA,GAElBlH,EAFkBkH,EAAA,GAAAC,EAGFxH,oBAAS,GAHPyH,EAAAvH,OAAAC,EAAA,EAAAD,CAAAsH,EAAA,GAGzBE,EAHyBD,EAAA,GAGhBE,EAHgBF,EAAA,GAAAG,EAIN5H,oBAAS,GAJH6H,EAAA3H,OAAAC,EAAA,EAAAD,CAAA0H,EAAA,GAIzBE,EAJyBD,EAAA,GAIlBE,EAJkBF,EAAA,GAAAG,EAKUhI,oBAAS,GALnBiI,EAAA/H,OAAAC,EAAA,EAAAD,CAAA8H,EAAA,GAKzBE,EALyBD,EAAA,GAKVE,EALUF,EAAA,GAS1B1F,GAAWpE,EAAA+B,OAAAsC,GAAA,EAAAtC,CAAAuC,GAAA5F,EAAA6F,KAAG,SAAAC,EAAOE,GAAP,IAAAD,EAAAwF,EAAAC,EAAAzE,UAAA,OAAAnB,GAAA5F,EAAAkG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAaN,EAAbyF,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAA0B,GAA1BrF,EAAAC,KAAA,EAEhB8E,GAAS,GACTJ,GAAW,GAHK3E,EAAAE,KAAA,EAKKsF,GAAIjG,YAAYK,EAAYC,GALjC,OAKVuF,EALUpF,EAAAI,KAOhB/C,EAAS,SAAA4C,GAAI,OAAA/C,OAAAiF,GAAA,EAAAjF,CAAA,GACRkI,EADQ,CAEXnB,QACEpE,EAAO,EAAP3C,OAAAuI,GAAA,EAAAvI,CAAe+C,EAAKgE,SAApBrJ,OAAAsC,OAAAuI,GAAA,EAAAvI,CAAgCkI,EAAOnB,UAAvC/G,OAAAuI,GAAA,EAAAvI,CAAsDkI,EAAOnB,aAVjDjE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0F,GAAA1F,EAAA,SAahB+E,GAAS,GAbO,QAelBJ,GAAW,GAfO,yBAAA3E,EAAAO,SAAAZ,EAAAa,KAAA,aAAH,SAAAC,GAAA,OAAAtF,EAAAwF,MAAAH,KAAAI,aAoDjB,OAjCApD,oBAAU,WACN,IAAIoC,EAAW,CACX,IAAMgE,EAAeF,GAAiB,aAEtC,GAAGE,EAGC,OAFA+B,QAAQC,IAAI,qCACZvI,EAASuG,GAKjB+B,QAAQC,IAAI,qBACZvI,EAAS2G,IACXzE,EAAY,EAAGK,IACd,CAACA,IAIFpC,oBAAU,WACF0H,IAEJ3F,EAAYnC,EAAMyC,KAAO,EAAGD,GAC5BuF,GAAiB,KAElB,CAACD,EAAetF,EAAYxC,EAAMyC,OAIrCrC,oBAAU,WACFoC,GAAYiE,eAAegC,QAAQ,YAAaxD,KAAKC,UAAUlF,KACpE,CAACwC,EAAYxC,IAGX,CAAEA,QAAOsH,UAASI,QAAOlF,aAAY9C,gBAAeqI,oBCzDmBW,GAAtE1I,EADSiH,EACTjH,MAAOsH,EADEL,EACFK,QAASI,EADPT,EACOS,MAAOlF,EADdyE,EACczE,WAAY9C,EAD1BuH,EAC0BvH,cAAeqI,EADzCd,EACyCc,iBAIxD,OAFFQ,QAAQC,IAAIxI,GAEP0H,EAAclL,EAAAC,EAAAC,cAAA,sCAGjBF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkM,SAAA,MACInG,GAAcxC,EAAM6G,QAAQ,GAC5BrK,EAAAC,EAAAC,cAACkM,EAAD,CACE5K,MAAK,GAAAR,OAAKK,GAALL,OhBZO,SgBYPA,OAAsCwC,EAAM6G,QAAQ,GAAGgC,eAC5DxK,MAAO2B,EAAM6G,QAAQ,GAAGiC,eACxBxK,KAAM0B,EAAM6G,QAAQ,GAAGkC,WAEvB,KAENvM,EAAAC,EAAAC,cAACsM,GAAD,CAAWtJ,cAAeA,IAC1BlD,EAAAC,EAAAC,cAACuM,EAAD,CAAMrK,OAAQ4D,EAAa,gBAAkB,kBAC5CxC,EAAM6G,QAAQqC,IAAI,SAAAC,GAAK,OACpB3M,EAAAC,EAAAC,cAAC0M,EAAD,CACIC,IAAKF,EAAMG,GACXlK,WAAW,EACXpB,MAAOmL,EAAMI,YACJ1L,EhBvBD,OgBuBgCsL,EAAMI,YACrCC,KAGTrK,QAASgK,EAAMG,QAItBhC,GAAW9K,EAAAC,EAAAC,cAAC+M,EAAD,MACXzJ,EAAMyC,KAAOzC,EAAM8G,cAAgBQ,GAChC9K,EAAAC,EAAAC,cAACgN,GAAD,CAAQpL,KAAK,YAAaqD,SAAU,kBAAMoG,GAAiB,ioBChD5D,IAAMnM,GAAUC,IAAOC,IAAV6N,MAaP3N,GAAUH,IAAOC,IAAV8N,MCOLC,GAhBI,SAAA9L,GAAA,IAAE+L,EAAF/L,EAAE+L,WAAF,OACftN,EAAAC,EAAAC,cAACqN,GAAD,KACIvN,EAAAC,EAAAC,cAACsN,GAAD,KACIxN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KACLJ,EAAAC,EAAAC,cAAA,qBAEJF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,YAAOoN,+4CCVZ,IAAMlO,GAAUC,IAAOC,IAAVmO,KACF,SAAAlM,GAAA,IAAEmM,EAAFnM,EAAEmM,SAAF,OAEVA,EAAQ,OAAA1M,OAAUK,GAAVL,OnBSM,SmBTNA,OAA2C0M,EAA3C,KACN,SAkBGlO,GAAUH,IAAOC,IAAVqO,MAcPjM,GAAOrC,IAAOC,IAAVsO,MCUFC,GAtCG,SAAAtM,GAAA,IAAEoL,EAAFpL,EAAEoL,MAAF,OACd3M,EAAAC,EAAAC,cAAC4N,GAAD,CAASJ,SAAUf,EAAMN,eACrBrM,EAAAC,EAAAC,cAAC6N,GAAD,KACI/N,EAAAC,EAAAC,cAAC0M,EAAD,CACIpL,MACImL,EAAMI,YAAN,GAAA/L,OACKK,GADLL,OpBCA,QoBDAA,OACoC2L,EAAMI,aACxCC,KAENpK,WAAW,IAEf5C,EAAAC,EAAAC,cAAC8N,GAAD,KACIhO,EAAAC,EAAAC,cAAA,UAAKyM,EAAM9K,OACX7B,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,SAAIyM,EAAMJ,UAEVvM,EAAAC,EAAAC,cAAA,OAAK+N,UAAU,oBACXjO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,OAAK+N,UAAU,SAAStB,EAAMuB,eAElClO,EAAAC,EAAAC,cAAA,OAAK+N,UAAU,YACXjO,EAAAC,EAAAC,cAAA,qBAAayM,EAAMwB,UAAUzC,OAAS,EAAI,IAAM,GAAhD,6BACCiB,EAAMwB,UAAUzB,IAAI,SAAA0B,GAAQ,OACzBpO,EAAAC,EAAAC,cAAA,KAAG2M,IAAKuB,EAASC,WAAYD,EAASE,65BCjC3D,IAAMlP,GAAUC,IAAOC,IAAViP,MAUP/O,GAAUH,IAAOC,IAAVkP,MCkBLC,GAvBM,SAAAlN,GAAA,IAAEmN,EAAFnN,EAAEmN,KAAMC,EAARpN,EAAQoN,OAAQC,EAAhBrN,EAAgBqN,QAAhB,OACjB5O,EAAAC,EAAAC,cAAC2O,GAAD,KACI7O,EAAAC,EAAAC,cAAC4O,GAAD,KACI9O,EAAAC,EAAAC,cAAA,OAAK+N,UAAU,UACXjO,EAAAC,EAAAC,cAAA,0BRVQ,SAAAwO,GACtB,IAAMK,EAAQC,KAAKC,MAAMP,EAAO,IAC1BQ,EAAOR,EAAO,GACpB,SAAA1N,OAAU+N,EAAV,MAAA/N,OAAoBkO,EAApB,KQOgCC,CAAST,KAE/B1O,EAAAC,EAAAC,cAAA,OAAK+N,UAAU,UACXjO,EAAAC,EAAAC,cAAA,oBAAYoJ,GAAaqF,KAE7B3O,EAAAC,EAAAC,cAAA,OAAK+N,UAAU,UACXjO,EAAAC,EAAAC,cAAA,qBAAaoJ,GAAasF,2eCfnC,IAAMxP,GAAUC,IAAOC,IAAV8P,MAiBP5M,GAAQnD,IAAOM,IAAV0P,MCIHC,GAlBD,SAAA/N,GAAA,IAAE+M,EAAF/M,EAAE+M,KAAMiB,EAARhO,EAAQgO,UAAWC,EAAnBjO,EAAmBiO,SAAnB,OAEVxP,EAAAC,EAAAC,cAACuP,GAAD,KACIzP,EAAAC,EAAAC,cAACwP,GAAD,CAAOrP,IAAKmP,EAAUjP,IAAI,gBAC1BP,EAAAC,EAAAC,cAAA,UAAKoO,GACLtO,EAAAC,EAAAC,cAAA,SAAIqP,KC0CGI,GAnCD,WAAM,IAAAC,ECXS,SAAAjN,GAAU,IAAAQ,EACTC,mBAAS,IADAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC5BK,EAD4BH,EAAA,GACrBI,EADqBJ,EAAA,GAAAqH,EAELtH,oBAAS,GAFJuH,EAAArH,OAAAC,EAAA,EAAAD,CAAAoH,EAAA,GAE5BI,EAF4BH,EAAA,GAEnBI,EAFmBJ,EAAA,GAAAC,EAGTxH,oBAAS,GAHAyH,EAAAvH,OAAAC,EAAA,EAAAD,CAAAsH,EAAA,GAG5BM,EAH4BL,EAAA,GAGrBM,EAHqBN,EAAA,GAiDnC,OA5CAjH,oBAAU,WAEN,IAAgBrC,EAAV0F,GAAU1F,EAAA+B,OAAAsC,GAAA,EAAAtC,CAAAuC,GAAA5F,EAAA6F,KAAG,SAAAC,IAAA,IAAA4G,EAAAkD,EAAA1B,EAAA,OAAAtI,GAAA5F,EAAAkG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEX0E,GAAW,GACXI,GAAS,GAHE/E,EAAAE,KAAA,EAKSsF,GAAI3E,WAAWtE,GALxB,cAKLgK,EALKvG,EAAAI,KAAAJ,EAAAE,KAAA,EAMWsF,GAAIvE,aAAa1E,GAN5B,OAMLkN,EANKzJ,EAAAI,KAQL2H,EAAY0B,EAAQC,KAAKC,OAC/B,SAAAC,GAAM,MAAmB,aAAfA,EAAOC,MAEjBxM,EAASH,OAAAiF,GAAA,EAAAjF,CAAA,GACFqJ,EADC,CAEJuD,OAAQL,EAAQM,KAChBhC,eAEJpD,GAAW,GAhBA3E,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0F,GAAA1F,EAAA,SAmBX+E,GAAS,GAnBE,yBAAA/E,EAAAO,SAAAZ,EAAAa,KAAA,aAAH,kBAAArF,EAAAwF,MAAAH,KAAAI,aAuBVgD,EAAeF,GAAiBnH,GAEtC,GAAGqH,EAGC,OAFAvG,EAASuG,QACTe,GAAW,GAIf9D,KAED,CAACtE,IAIJiB,oBAAU,WACNqG,eAAegC,QAAQtJ,EAAS8F,KAAKC,UAAUlF,KAEhD,CAACb,EAASa,IAEN,CAACA,QAAOsH,UAASI,SDpCckF,CADpBC,cAAX1N,SACMgK,EAFGiD,EAEVpM,MAAcsH,EAFJ8E,EAEI9E,QAASI,EAFb0E,EAEa1E,MAE7B,OAAGJ,EAAgB9K,EAAAC,EAAAC,cAAC+M,EAAD,MAChB/B,EAAclL,EAAAC,EAAAC,cAAA,sCAGbF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkM,SAAA,KACInM,EAAAC,EAAAC,cAACoQ,GAAD,CAAYhD,WAAYX,EAAML,iBAC9BtM,EAAAC,EAAAC,cAACqQ,GAAD,CAAW5D,MAAOA,IAClB3M,EAAAC,EAAAC,cAACsQ,GAAD,CACI9B,KAAM/B,EAAM8D,QACZ9B,OAAQhC,EAAMgC,OACdC,QAASjC,EAAMiC,UACnB5O,EAAAC,EAAAC,cAACuM,EAAD,CAAMrK,OAAO,SACRuK,EAAMuD,OAAOxD,IAAI,SAAAgE,GAAK,OACrB1Q,EAAAC,EAAAC,cAACyQ,GAAD,CACI9D,IAAK6D,EAAMrC,UACXC,KAAMoC,EAAMpC,KACZiB,UAAWmB,EAAMnB,UACjBC,SACEkB,EAAME,aAAN,GAAA5P,OAEGK,GAFHL,OzBtBJ,QyBsBIA,OAEkC0P,EAAME,cACtC5D,YE9BX6D,GAVE,WAEb,OACI7Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkM,SAAA,KACInM,EAAAC,EAAAC,cAAA,yBC0BG4Q,GAnBH,kBAER9Q,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAEMH,EAAAC,EAAAC,cAAC6Q,EAAD,MACF/Q,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,KACIhR,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAASlR,EAAAC,EAAAC,cAACiR,GAAD,QACzBnR,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAOC,KAAK,YAAYC,QAASlR,EAAAC,EAAAC,cAACkR,GAAD,QACjCpR,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAOC,KAAK,KAAKC,QAASlR,EAAAC,EAAAC,cAACmR,GAAD,SAI5BrR,EAAAC,EAAAC,cAACO,EAAD,QCrBV6Q,IAASC,OACPvR,EAAAC,EAAAC,cAACF,EAAAC,EAAMuR,WAAP,KACExR,EAAAC,EAAAC,cAACuR,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.bba9d8b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/react-movie-logo.5de5919a.svg\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-icon.80e9d8a2.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 100px;\n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport RMDBLogo from '../../images/react-movie-logo.svg';\nimport TMDBLogo from '../../images/tmdb_logo.svg';\n\nimport {Wrapper, Content, LogoImg, TMDBLogoImg} from './Header.styles';\n\nconst Header = () =>(\n    <Wrapper>\n        <Content>\n            <Link to='/'>\n                <LogoImg src={RMDBLogo} alt='rmdb-logo' />\n            </Link>\n            \n            <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo' />\n        </Content>\n    </Wrapper>\n);\n\nexport default Header;\n    \n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px; \n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535; \n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;  \n  }\n  body {  \n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: linear-gradient(\n        to bottom, rgba(0,0,0,0) 41%, \n        rgba(0,0,0,0.65) 100%\n    ),\n    url(${({image}) => image}), var(--darkGrey);\n    background-size: 100%, cover;\n    background-position: center;\n    height: 600px;\n    position: relative;\n    animation: animationHeroImage 1s;\n    \n    @keyframes animationHeroImage{\n        from{\n            opacity:0;\n    \n        }\n        to{\n            opacity:1;\n        }\n    }\n    \n\n`;\n\nexport const Content = styled.div`\n    padding: 20px;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n\n`;\n\nexport const Text = styled.div`\n    z-index: 100;\n    max-width:700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right:20px;\n    min-height:100px;\n    color: var(--white);\n    \n    h1{\n        font-size: var(--fontSuperBig);\n    \n    @media screen and (max-width: 720px){\n        font-size: var(--fontBig);\n        }\n    }\n    \n    p{\n        font-size: var(--fontMed);\n        \n        @media screen and (max-width: 720px){\n            font-size: var(--fontSmall);\n        }\n    }\n    \n    @media screen and (max-width:720px){\n        max-width: 100%;\n    }\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Wrapper, Content, Text} from './HeroImage.styles';\n\nconst HeroImage = ({image, title, text}) => (\n    <Wrapper image={image}>\n        <Content>\n            <Text>\n                <h1>{title}</h1>\n                <p>{text}</p>\n            </Text>\n        </Content>\n    \n    </Wrapper>\n\n);\n\nHeroImage.propTypes = {\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string\n};\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    max-width: var(--maxwidth);\n    margin: 0 auto;\n    padding: 0 20px;\n    \n    h1{\n        color: var(--medGrey);\n        \n        @media screen and (max-width:768px){\n            font-size: var(--fontBig);\n        }\n    }\n\n`;\n\nexport const Content = styled.div`\n    display:grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 2rem;\n\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n//styles\nimport {Wrapper, Content} from './Grid.styles.js';\n\n\nconst Grid =({header, children}) =>(\n    <Wrapper>\n        <h1>{header}</h1>\n        <Content>{children}</Content>\n    </Wrapper>\n\n\n);\n\nGrid.propTypes = {\n    header: PropTypes.string\n};\n\nexport default Grid;","import styled from 'styled-components';\n\nexport const Image = styled.img`\n\n    width:100%;\n    max-width: 720px;\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateThumb 0.5s;\n    \n    :hover{\n        opacity: 0.8;\n    }\n    \n    @keyframes animateThumb{\n        from{\n            opacity: 0;\n    \n        }\n        to{\n            opacity: 1;\n        }\n    }\n    \n\n`;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n//stykes\nimport {Image} from './Thumb.styles';\n\nconst Thumb = ({image, movieId, clickable}) =>(\n    \n    <div>\n        {clickable ? (\n            <Link to={`/${movieId}`}>\n                <Image src={image} alt='movie-thumb' />\n            </Link>\n        ) : (\n            <Image src={image} alt='movie-thumb' />\n        )}\n        \n    </div>\n\n\n);\n\nThumb.propTypes = {\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    clickable: PropTypes.bool\n};\n\nexport default Thumb;","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n\n    border: 5px solid var(--lightGrey);\n    border-top: 5px solid var(--medGrey);\n    border-radius: 50%;\n    width:50px;\n    height: 50px;\n    animation: spin 0.8s linear infinite;\n    margin: 20px auto;\n    \n    @keyframes spin{\n        0%{\n            transform:rotate(0deg);\n         }\n        100%{\n            transform: rotate(360deg);\n         }\n    }\n\n\n`;","import {Spinner} from './Spinner.styles.js';\n\nexport default Spinner;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    height:100px;\n    background: var(--darkGrey);\n    padding: 0 20px;\n\n`;\n\nexport const Content = styled.div`\n    position:relative;\n    max-width: var(--maxWidth);\n    width: 100%;\n    height: 55px;\n    background: var(--medGrey);\n    border-radius: 40px;\n    color: var(--white);\n    \n    img{\n    position: absolute;\n    left:15px;\n    top: 14px;\n    width: 30px;\n    }\n    \n    input{\n    font-size: var(--fontBig);\n    position:absolute;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height:40px;\n    color: var(--white);\n    \n    :focus{\n     outline: none;\n    }\n    \n    }\n`;\n\n","import React, {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\n//image\nimport searchIcon from '../../images/search-icon.svg';\n\n//styles\nimport {Wrapper, Content} from './SearchBar.styles';\n\nconst SearchBar = ({setSearchTerm}) =>{\n    const [state, setState] = useState('');\n    const initial = useRef(true);\n    \n   \n    \n    useEffect(()=>{\n        \n        if(initial.current){\n            initial.current = false;\n            return;\n        }\n        \n        \n        const timer = setTimeout(()=>{\n            setSearchTerm(state);\n        }, 500)\n        \n        return () => clearTimeout(timer)\n    },[setSearchTerm, state])\n    \n    \n    \n    return(\n    <Wrapper>\n        <Content>\n            <img src={searchIcon} alt='search-icon' />\n            <input \n                type='text' \n                placeholder='Search Movie' \n                onChange={event => setState(event.currentTarget.value)}\n                value={state}\n                />\n        </Content>\n    </Wrapper>\n    \n    );\n    \n   \n}\n\nSearchBar.propTypes = {\n    callback: PropTypes.func\n};\n\nexport default SearchBar;","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n\n    display: block;\n    background: var(--darkGrey);\n    width: 25%;\n    min-width:200px;\n    height: 60px;\n    border-radius: 30px;\n    color: var(--white);\n    border:0;\n    font-size: var(--fontBig);\n    margin: 20px auto;\n    transition: all 0.3s;\n    outline: none;\n    cursor: pointer;\n    \n    :hover{\n    opacity: 0.8;\n    }\n\n`;","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;","import React from 'react';\nimport PropTypes from 'prop-types';\n//styles\nimport {Wrapper} from './Button.styles';\n\nconst Button = ({text, callback}) => (\n    <Wrapper type='button' onClick={callback}>\n        {text}\n    </Wrapper>\n);\n\nButton.propTypes = {\n    text: PropTypes.string,\n    callback:PropTypes.func\n}\n\nexport default Button;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = stateName => {\n    const sessionState = sessionStorage.getItem(stateName);\n    return sessionState && JSON.parse(sessionState);\n}","import { useState, useEffect, useRef } from 'react';\n// API\nimport API from '../API';\n//Helpers\\\nimport {isPersistedState} from '../helpers';\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0\n};\n\nexport const useHomeFetch = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n    \n   \n\n  const fetchMovies = async (page, searchTerm = '') => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const movies = await API.fetchMovies(searchTerm, page);\n\n      setState(prev => ({\n        ...movies,\n        results:\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n      }));\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  // Initial and search\n  useEffect(() => {\n      if(!searchTerm){\n          const sessionState = isPersistedState('homeState');\n          \n          if(sessionState){\n              console.log(\"Grabbing from sessionStorage\");\n              setState(sessionState);\n              return;\n          }\n      }\n      \n      console.log(\"Grabbing from API\");\n      setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]);\n    \n    //load more\n    \n    useEffect(()=>{\n        if(!isLoadingMore) return;\n        \n        fetchMovies(state.page + 1, searchTerm);\n        setIsLoadingMore(false);\n        \n    }, [isLoadingMore, searchTerm, state.page])\n    \n    //Write to sessionStorage\n    \n    useEffect(() =>{\n        if(!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state));\n    }, [searchTerm, state])\n    \n\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\n};","import React from 'react';\n// Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\n// Components\nimport HeroImage from './HeroImage';\nimport Grid from './Grid';\nimport Thumb from './Thumb';\nimport Spinner from './Spinner';\nimport SearchBar from './SearchBar';\nimport Button from './Button';\n\n// Hook\nimport { useHomeFetch } from '../hooks/useHomeFetch';\n// Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Home = () => {\n  const { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore} = useHomeFetch();\n\n  console.log(state);\n    \n    if(error) return <div>Something went wrong...</div>\n\n  return (\n    <>\n      {!searchTerm && state.results[0] ? (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n          title={state.results[0].original_title}\n          text={state.results[0].overview}\n        />\n      ) : null}\n\n    <SearchBar setSearchTerm={setSearchTerm}/>\n    <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n    {state.results.map(movie =>(\n        <Thumb\n            key={movie.id}\n            clickable={true}\n            image={movie.poster_path\n                   ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                   : NoImage\n                  \n                  }\n            movieId={movie.id}\n        />\n    ))}\n    </Grid>\n    {loading && <Spinner />}    \n    {state.page < state.total_pages && !loading && (\n        <Button text=\"Load More\"  callback={() => setIsLoadingMore(true)}/>\n    )}\n\n    </>\n  );\n};\n\nexport default Home;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    width:100%;\n    height:70px;\n    background: var(--medGrey);\n    color: var(--white);\n\n\n`;\n\nexport const Content = styled.div`\n\n    display: flex;\n    width:100%;\n    max-width: var(--maxWidth);\n    padding: 0 20px;\n    \n    \n    span{\n    font-size: var(--fontMed);\n    color: var(--white);\n    padding-right:10px;\n    \n    \n    @media screen and (max-width:768px){\n        font-size: var(--fontSmall);\n    }\n    \n    }\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n//styles\nimport {Wrapper, Content} from './BreadCrumb.styles';\n\nconst BreadCrumb = ({movieTitle}) =>(\n    <Wrapper>\n        <Content>\n            <Link to='/'>\n                <span>Home</span>\n            </Link>\n            <span>|</span>\n            <span>{movieTitle}</span>\n        </Content>\n    </Wrapper>\n);\n\nBreadCrumb.propTypes = {\n    movieTitle: PropTypes.string\n};\n\nexport default BreadCrumb;","import styled from 'styled-components';\nimport {IMAGE_BASE_URL, BACKDROP_SIZE} from '../../config';\n\nexport const Wrapper = styled.div`\n    background: ${({backdrop}) =>\n\n        backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})`\n        : '#000'\n  };  \n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieInfo 1s;\n  \n  @keyframes animateMovieInfo{\n      from{\n          opacity:0;\n      }\n      to{\n      opacity: 1;\n      }\n  }\n\n`;\n\nexport const Content = styled.div`\n   display: flex;\n   max-width: var(--maxWidth);\n   margin:0;\n   background: rgba(0,0,0,0.7);\n   border-radius: 20px;\n   \n   @media screen and (max-width: 768px){\n       display: block;\n       max-height: none;\n   }\n\n`;\n\nexport const Text = styled.div`\n    width: 100%;\n    padding: 20px 40px;\n    color:var(--white);\n    overflow: hidden;\n    \n    .rating-dicertors{\n        display:flex;\n        justify-content: flex-start;\n    }\n    \n    .score{\n        display:flex;\n        align-items: center;\n        justify-content: center;\n        width: 35px;\n        height: 35px;\n        background: #fff;\n        color: #000;\n        font-weight:800;\n        border-radius: 50%;\n        margin: 0;\n    }\n    \n    .director{\n        margin: 0 0 0  40px;\n    \n    p{\n        margin: 0;\n    }\n    \n    h1{\n        @media screen and (max-width: 768px){\n            font-size: var(--fontBig);\n        }\n    }\n        \n    }\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n//components\nimport Thumb from '../Thumb';\n//Config\nimport {IMAGE_BASE_URL, POSTER_SIZE} from '../../config';\n//Image\nimport NoImage from '../../images/no_image.jpg';\n//Styles\nimport {Wrapper, Content, Text} from './MovieInfo.styles';\n\nconst MovieInfo = ({movie}) =>(\n    <Wrapper backdrop={movie.backdrop_path}>\n        <Content>\n            <Thumb\n                image={\n                    movie.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                    : NoImage\n                }\n                clickable={false}\n                />\n            <Text>\n                <h1>{movie.title}</h1>\n                <h3>PLOT</h3>\n                <p>{movie.overview}</p>\n                \n                <div className='rating-directors'>\n                    <div>\n                        <h3>RATING</h3>\n                        <div className='score'>{movie.vote_average}</div>\n                    </div>\n                    <div className='director'>\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : '' }                         </h3>\n                        {movie.directors.map(director =>(\n                            <p key={director.credit_id}>{director.name}</p>\n                        ))}\n                    </div>\n                </div>\n            </Text>\n        </Content>\n    </Wrapper>\n\n);\n\nMovieInfo.propTypes = {\n    movie: PropTypes.object\n}\n\nexport default MovieInfo;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n\n    display:flex;\n    align-items: center;\n    min-height: 100px;\n    background: var(--darkGrey);\n    padding: 0 20px;\n\n`;\n\nexport const Content = styled.div`\n\n    display: flex;\n    max-width: var(--maxWidth);\n    width: 100%;\n    margin: 0 auto;\n    \n    .column{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: var(--medGrey);\n        border-radius: 20px;\n        margin: 0 20px;\n        flex: 1;\n        \n        :first-child{\n            margin-left:0;\n        }\n        \n        :last-child{\n        margin-right:0;\n        }\n        \n        @media screen and (max-width:768px){\n            display:block;\n            \n            .column{\n            margin: 20px 0;\n            }\n        }\n    }\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n// Helpers\nimport {calcTime, convertMoney} from '../../helpers';\n//Styles\nimport {Wrapper, Content} from './MovieInfoBar.styles';\n\nconst MovieInfoBar = ({time, budget, revenue}) => (\n    <Wrapper>\n        <Content>\n            <div className='column'>\n                <p>Running time: {calcTime(time)}</p>\n            </div>\n            <div className='column'>\n                <p>Budget: {convertMoney(budget)}</p>\n            </div>\n            <div className='column'>\n                <p>Revenue: {convertMoney(revenue)}</p>\n            </div>\n        </Content>\n    </Wrapper>\n\n);\n\nMovieInfoBar.propTypes = {\n    time: PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number\n};\n\nexport default MovieInfoBar;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    color: var(--white);\n    background: var(--darkGrey);\n    border-radius: 20px;\n    padding: 5px;\n    text-align: center;\n    \n    h3{\n        margin: 10px 0 0 0;\n    }\n    \n    p{\n        margin: 5px 0;\n    }\n\n`;\n\nexport const Image = styled.img`\n\n    display: block;\n    width:100%;\n    height:220px;\n    objectfit: cover;\n    border-radius:15px;\n\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Styles\nimport {Wrapper, Image} from './Actor.styles';\n\nconst Actor = ({name, character, imageUrl}) =>(\n\n    <Wrapper>\n        <Image src={imageUrl} alt='actor-thumb' />\n        <h3>{name}</h3>\n        <p>{character}</p>\n             \n    </Wrapper>\n\n);\n\n\nActor.propTypes = {\n    name: PropTypes.string,\n    character: PropTypes.string,\n    imageUrl: PropTypes.string\n}\n\nexport default Actor;","import React from 'react';\nimport {useParams}  from 'react-router-dom';\n//config\n\nimport {IMAGE_BASE_URL, POSTER_SIZE} from '../config';\n//Components\nimport BreadCrumb from './BreadCrumb';\nimport Grid from './Grid';\nimport Spinner from './Spinner';\nimport MovieInfo from './MovieInfo';\nimport MovieInfoBar from './MovieInfoBar';\nimport Actor from './Actor';\n//Hook\nimport { useMovieFetch } from '../hooks/useMovieFetch';\n//Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Movie = () => {\n    const {movieId} = useParams();\n    const{state: movie, loading, error} = useMovieFetch(movieId);\n    \n    if(loading) return <Spinner />\n    if(error) return <div>Something goes wrong...</div>\n    \n    return(\n        <>\n            <BreadCrumb movieTitle={movie.original_title} />\n            <MovieInfo movie={movie} />\n            <MovieInfoBar \n                time={movie.runtime} \n                budget={movie.budget} \n                revenue={movie.revenue} />\n            <Grid header='Actor'>\n                {movie.actors.map(actor =>(\n                  <Actor \n                      key={actor.credit_id}\n                      name={actor.name}\n                      character={actor.character}\n                      imageUrl={\n                        actor.profile_path\n                        ?\n                        `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                        : NoImage\n                    }\n                      />\n                ))}\n            </Grid>\n        </>\n    )\n}\n\n\nexport default Movie;","import {useState, useEffect}  from 'react';\nimport API from '../API';\n//Helpers\nimport {isPersistedState} from '../helpers';\n\n\nexport const useMovieFetch = movieId =>{\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    \n    useEffect(() => {\n        \n        const fetchMovie = async() =>{\n            try{\n                setLoading(true);\n                setError(false);\n                \n                const movie = await API.fetchMovie(movieId);\n                const credits = await API.fetchCredits(movieId);\n                //Get directors only\n                const directors = credits.crew.filter(\n                member => member.job === 'Director');\n                \n                setState({\n                    ...movie,\n                    actors: credits.cast,\n                    directors\n                })\n                setLoading(false);\n                \n            } catch(error){\n                setError(true)\n            }\n        };\n        \n        const sessionState = isPersistedState(movieId);\n        \n        if(sessionState){\n            setState(sessionState);\n            setLoading(false);\n            return;\n        }\n        \n        fetchMovie();\n        \n    }, [movieId]);\n    \n    //Write to sessionStorage\n    \n    useEffect(() =>{\n        sessionStorage.setItem(movieId, JSON.stringify(state));\n        \n    }, [movieId, state])\n    \n    return {state, loading, error};\n}","import React from 'react';\n\nconst NotFound = () => {\n    \n    return(\n        <>\n            <div>NotFound</div>\n        </>\n    )\n}\n\n\nexport default NotFound;","import React from 'react';\n//Routing\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\n//components\nimport Header from \"./components/Header\";\n//styles\nimport {GlobalStyle} from './GlobalStyle'\nimport Home from './components/Home';\nimport Movie from './components/Movie.js';\nimport NotFound from './components/NotFound';\n\n\n\nconst App = () => (\n  \n    <Router>\n          \n          <Header />\n        <Routes>\n            <Route path='/' element={<Home />} />\n            <Route path='/:movieId' element={<Movie />} />\n            <Route path='/*' element={<NotFound/>} />\n            \n        </Routes>\n          \n          <GlobalStyle /> \n    \n    </Router>\n  \n  \n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}